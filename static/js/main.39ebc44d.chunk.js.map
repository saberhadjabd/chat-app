{"version":3,"sources":["api/index.js","components/Header/Header.jsx","components/Message/Message.js","components/Message/Message.jsx","components/ChatHistory/ChatHistory.jsx","ChatInput.js","ChatInput.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","WebSocket","Header","className","Message","props","temp","JSON","parse","message","state","this","body","Component","ChatHistory","console","log","chatHistory","messages","map","msg","data","ChatInput","onKeyDown","send","App","cb","setState","prevState","onopen","onmessage","onclose","event","onerror","error","keyCode","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTACIA,G,MAAS,IAAIC,UAAU,2B,eCQZC,EANA,kBACb,qBAAKC,UAAU,SAAf,SACE,gECHWC,G,8DCEb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIC,EAAOC,KAAKC,MAAM,EAAKH,MAAMI,SAFhB,OAGjB,EAAKC,MAAQ,CACXD,QAASH,GAJM,E,0CAQnB,WACE,OAAO,sBAAKH,UAAU,UAAf,UAA0BQ,KAAKD,MAAMD,QAAQG,KAA7C,W,GAVWC,cCePC,E,4JAbX,WACIC,QAAQC,IAAIL,KAAKN,MAAMY,aACvB,IAAMC,EAAWP,KAAKN,MAAMY,YAAYE,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAASX,QAASW,EAAIC,UAE7E,OACE,qBAAKlB,UAAU,cAAf,SAEGe,Q,GARiBL,aCFXS,G,kKCGb,WACE,OACE,qBAAKnB,UAAU,YAAf,SACI,uBAAOoB,UAAWZ,KAAKN,MAAMmB,a,GAJfX,cC+CTY,E,kDAzCb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXO,YAAa,IAHE,E,qDAOnB,WAAqB,IPdTS,EOcQ,OPdRA,EOeF,SAACN,GACPL,QAAQC,IAAI,eACZ,EAAKW,UAAS,SAAAC,GAAS,MAAK,CAC1BX,YAAY,GAAD,mBAAM,EAAKP,MAAMO,aAAjB,CAA8BG,QAE3CL,QAAQC,IAAI,EAAKN,QPnBrBK,QAAQC,IAAI,cAEZhB,EAAO6B,OAAS,WACdd,QAAQC,IAAI,2BAGdhB,EAAO8B,UAAY,SAAAV,GACjBL,QAAQC,IAAII,GACZM,EAAGN,IAGLpB,EAAO+B,QAAU,SAAAC,GACfjB,QAAQC,IAAI,6BAA8BgB,IAG5ChC,EAAOiC,QAAU,SAAAC,GACfnB,QAAQC,IAAI,iBAAkBkB,M,kBOO/B,SAAKF,GPHM,IAAAZ,EOIW,KAAlBY,EAAMG,UPJCf,EOKAY,EAAMI,OAAOC,MPJzBtB,QAAQC,IAAI,gBAAiBI,GAC7BpB,EAAOwB,KAAKJ,GOIRY,EAAMI,OAAOC,MAAQ,M,oBAQzB,WACA,OACE,sBAAKlC,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,CAAac,YAAaN,KAAKD,MAAMO,cACrC,cAAC,EAAD,CAAWO,KAAMb,KAAKa,c,GAnCVX,aCGHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39ebc44d.chunk.js","sourcesContent":["// api/index.js\r\nvar socket = new WebSocket(\"ws://localhost:8080/ws\");\r\n\r\nlet connect = cb => {\r\n  console.log(\"connecting\");\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"Successfully Connected\");\r\n  };\r\n\r\n  socket.onmessage = msg => {\r\n    console.log(msg);\r\n    cb(msg);\r\n  };\r\n\r\n  socket.onclose = event => {\r\n    console.log(\"Socket Closed Connection: \", event);\r\n  };\r\n\r\n  socket.onerror = error => {\r\n    console.log(\"Socket Error: \", error);\r\n  };\r\n};\r\n\r\nlet sendMsg = msg => {\r\n  console.log(\"sending msg: \", msg);\r\n  socket.send(msg);\r\n};\r\n\r\nexport { connect, sendMsg };","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => (\r\n  <div className=\"header\">\r\n    <h2>Des questions ? Discutons !</h2>\r\n  </div>\r\n);\r\n\r\nexport default Header;","import Message from \"./Message.jsx\";\r\n\r\nexport default Message;","import React, { Component } from \"react\";\r\nimport \"./Message.scss\";\r\n\r\nclass Message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let temp = JSON.parse(this.props.message);\r\n    this.state = {\r\n      message: temp\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"Message\">{this.state.message.body} </div>;\r\n  }\r\n}\r\n\r\nexport default Message;","import React, { Component } from \"react\"\r\nimport \"./ChatHistory.scss\"\r\nimport Message from '../Message/Message'\r\n\r\nclass ChatHistory extends Component {\r\n    render() {\r\n        console.log(this.props.chatHistory);\r\n        const messages = this.props.chatHistory.map(msg => <Message message={msg.data} />);\r\n\r\n    return (\r\n      <div className=\"ChatHistory\">\r\n        \r\n        {messages}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatHistory;","import ChatInput from \"./ChatInput.jsx\";\r\n\r\nexport default ChatInput;","import React, { Component } from \"react\";\r\nimport \"./ChatInput.scss\";\r\n\r\n\r\nclass ChatInput extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ChatInput\">\r\n          <input onKeyDown={this.props.send} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatInput;","// App.js\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { connect, sendMsg } from \"./api\";\nimport Header from './components/Header/Header';\nimport ChatHistory from './components/ChatHistory/ChatHistory';\nimport ChatInput from './ChatInput';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatHistory: []\n    }\n    \n  }\n  componentDidMount() {\n    connect((msg) => {\n      console.log(\"New Message\")\n      this.setState(prevState => ({\n        chatHistory: [...this.state.chatHistory, msg]\n      }))\n      console.log(this.state);\n    });\n  }\n\n   send(event) {\n    if(event.keyCode === 13) {\n      sendMsg(event.target.value);\n      event.target.value = \"\";\n    }\n  }\n\n  \n\n\n\n  render() {\n  return (\n    <div className=\"App\">\n           \n      <Header />\n      <ChatHistory chatHistory={this.state.chatHistory} />\n      <ChatInput send={this.send} />\n     </div>\n  );\n}\n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}